/**
 * meetyou
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.electrolytej.main;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;
import java.io.Serializable;

@ApiModel(description = "")
public class V1GetadUser implements Serializable {
  
  @SerializedName("avatar")
  private String avatar = null;
  @SerializedName("dsp_source_key")
  private String dspSourceKey = null;

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public String getAvatar() {
    return avatar;
  }
  public void setAvatar(String avatar) {
    this.avatar = avatar;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public String getDspSourceKey() {
    return dspSourceKey;
  }
  public void setDspSourceKey(String dspSourceKey) {
    this.dspSourceKey = dspSourceKey;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1GetadUser v1GetadUser = (V1GetadUser) o;
    return (this.avatar == null ? v1GetadUser.avatar == null : this.avatar.equals(v1GetadUser.avatar)) &&
        (this.dspSourceKey == null ? v1GetadUser.dspSourceKey == null : this.dspSourceKey.equals(v1GetadUser.dspSourceKey));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.avatar == null ? 0: this.avatar.hashCode());
    result = 31 * result + (this.dspSourceKey == null ? 0: this.dspSourceKey.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1GetadUser {\n");
    
    sb.append("  avatar: ").append(avatar).append("\n");
    sb.append("  dspSourceKey: ").append(dspSourceKey).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
